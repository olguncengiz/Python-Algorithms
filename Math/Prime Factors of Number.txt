prime_list = []

def primefactorsof(number):
    primefactors = []
    prime = prime_num()
    
    index = 0
    while number > 1:
        if index == len(prime_list):
            prime_list.append(prime.next())
            
        while index < len(prime_list):
            if number % prime_list[index] == 0:
                number = number / prime_list[index]
                primefactors.append(prime_list[index])
            else:
                index = index + 1
    
    return primefactors
    
def prime_num():
    prime_numbers = []
    number = 2
    while True:
        isPrime = True
        for i in prime_numbers:
            if i ** 2 > number:
                break
            isPrime = isPrime and (number % i != 0)

        if isPrime:
            yield number
            prime_numbers.append(number)
        number = number + 1

def distinctNumbers(primelist):
    sList = map(lambda x: str(x), primelist)

    i = 0
    while i < len(sList) - 1:
        if sList[i].startswith(sList[i + 1]):
            sList[i:i+2] = [''.join(sList[i:i+2])]
            i = 0
        else:
            i = i + 1

    return sList